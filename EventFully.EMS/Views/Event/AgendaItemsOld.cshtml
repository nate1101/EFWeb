@model EventFully.EMS.Models.EventViewModel
@{
    ViewData["Title"] = "Schedule Items";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@Model.Event.EventName: Schedule</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Event",new { eventId = @Model.Event.Id })">Event Home</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Schedule</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2 text-right">
        <a href="@Url.Action("Index", "Event",new { eventId = @Model.Event.Id })" class="btn btn-danger mt-4"><i class="fa fa-backward"></i> Back to Event Home</a>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div id="agenda-item-modal"></div>
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Add, Edit or Delete Schedule Items</h5>
                </div>
                <div class="ibox-content">
                    <div id="calendar"></div>
                    @*<table class="table table-striped table-bordered table-hover" id="agenda">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Date</th>
                                    <th>Time</th>
                                    <th>Title</th>
                                    <th>Description</th>
                                    <th>Location</th>
                                    <th>Edit</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>*@

                </div>
            </div>
        </div>
    </div>

</div>
@section Styles {
<environment names="Development,Staging,Production">
    <link rel="stylesheet" href="~/lib/dataTables/datatables.min.css" />
    <link href="~/lib/fullcalendar/fullcalendar.min.css" rel="stylesheet" />
    <link href="~/lib/chosen/bootstrap-chosen.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-colorselector/dist/bootstrap-colorselector.min.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-select/dist/css/bootstrap-select.min.css" rel="stylesheet" />
    <link href="~/lib/jquery.timepicker/jquery.timepicker.min.css" rel="stylesheet" />
</environment>
}

@section Scripts {
<environment names="Development,Staging,Production">
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script src="~/lib/jquery-validation/dist/additional-methods.js"></script>
    <script src="~/lib/jQuery-unobtrusive-ajax/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/lib/dataTables/datatables.min.js"></script>
    <script src="~/lib/dataTables/dataTables.bootstrap4.min.js"></script>
    <script src="~/lib/moment/min/moment.min.js"></script>
    <script src="~/lib/fullcalendar/fullcalendar.min.js"></script>
    <script src="~/lib/chosen/chosen.jquery.js"></script>
    <script src="~/lib/bootstrap-colorselector/dist/bootstrap-colorselector.min.js"></script>
    <script src="~/lib/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
    <script src="~/lib/jquery.timepicker/jquery.timepicker.min.js"></script>
</environment>

    <script type="text/javascript">
        var sTable;
        $(document).ready(function () {
            $('#calendar').fullCalendar({
                defaultView: 'agendaFourDay',
                defaultDate: '@Model.Event.StartDate.ToShortDateString()',
                validRange: {
                    start: '@Model.Event.StartDate.ToShortDateString()',
                    end: '@Model.Event.EndDate.AddDays(1).ToShortDateString()'
                },
                minTime: "@Model.MinStartDate", //.ToString("HH:mm")", // "08:00",
                slotEventOverlap: false,
                defaultTimedEventDuration: "00:30:00",
                eventColor: '#FFFFFF',
                eventTextColor: '#2d2d2d',
                eventBorderColor: '#e7e7e7',
                agendaEventMinHeight: 50,
                views: {
                    agendaFourDay: {
                        type: 'agenda',
                        duration: { days: @Model.Event.EndDate.AddDays(1).Subtract(@Model.Event.StartDate).Days }
                    }
                },
                events:
                {
                    url: '/Event/GetAgendaItemList/',
                    type: 'GET',
                    data: {
                        eventId: @Model.Event.Id
                        },
                },
                contentHeight: "auto",
                themeSystem: 'bootstrap4',
                allDayText: "",
                eventRender: function (event, element) {
                    element.find(".fc-time").append("<div class='event-actions' style='position: absolute; top: 0; right: 0;'><a href='#' class='edit-agenda-item' data-id='" + event.id + "' style='background-color: transparent'><i class='fa fa-edit'></i></a><a href='#' class='delete-agenda-item' style='background-color: transparent' data-id='" + event.id + "'><i class='fa fa-trash text-danger'></i></a></div>");
                    //element.find(".fc-title").append("<ul><li>Scott</li></ul>");
                    var tracks = event.trackAgendaItems.map((item, i) => {
                        return (
                            "<span style='background-color: " + item.track.hexColor + ";height: 10px;width: 10px;border-radius: 10px;margin-left: 2px; display: inline-block;'></span>"
                        );
                    });
                    element.find(".fc-title").append(tracks);
                },
                dayRender: function (date, cell) {
                    cell.append("<a href='#' class='btn btn-primary add-agenda-item' data-eventid='" + @Model.Event.Id + "' data-startdate='" + moment(date).format("MM/DD/YYYY") + "' style='margin-top: 10px'>Add Agenda Item</a>");
                }
            });

            $(document).on('click', '#add-track-link', function () {
                $("#add-track-link-container").hide();
                $("#add-track-container").show();
            });

            $(document).on('click', '#CancelTrack', function () {
                $("#add-track-link-container").show();
                $("#add-track-container").hide();
                $("#AddTrackName").val("");
                $("#colorselector").val("#FFFFFF");
            });

            $(document).on('click', '#AddTrack', function (e) {
                e.preventDefault();
                var valid = $('#AddTrackName').valid();
                if (valid) {
                    var eventId = @Model.Event.Id;
                    var hexColor = $("#colorselector").val();
                    var trackName = $("#AddTrackName").val();

                    $.ajax({
                        url: "/Event/AddTrack",
                        type: "POST",
                        dataType: "json",
                        data: { eventId: eventId, hexColor: hexColor, trackName: trackName  },
                        success: function (data) {
                            if (data.success) {
                                $("#SelectedTracks").append('<option value="' + data.trackId + '" selected="selected" data-content="<i class=\'fa fa-circle\' style=\'color: ' + hexColor + '\'></i>  ' + trackName + '">' + trackName + '</option>');
                                $('.selectpicker').selectpicker('refresh');
                                $("#add-track-link-container").show();
                                $("#add-track-container").hide();
                                $("#AddTrackName").val("");
                                $("#colorselector").val("#FFFFFF");
                            }
                            
                        }
                    });
                }
            });

            $(document).on('click', '.edit-agenda-item', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                $.ajax({
                    url: "/event/EditAgendaItem",
                    type: "GET",
                    dataType: "html",
                    data: { id: id },
                    success: function (data) {
                        $("#agenda-item-modal").html(data);
                        $('.chosen-select').chosen({ width: "100%" });
                        $('.selectpicker').selectpicker();
                        $('#colorselector').colorselector();
                        $('#AgendaItem_StartTime').timepicker();
                        $('#AgendaItem_EndTime').timepicker();
                        $("#EditAgendaItemForm").validate();
                        $("#AgendaItemModal").modal('show');
                    }
                });
            });

            $(document).on('click', '.add-agenda-item', function (e) {
                e.preventDefault();
                var eventId = $(this).data('eventid');
                var startDate = $(this).data('startdate');
                $.ajax({
                    url: "/event/AddAgendaItem",
                    type: "GET",
                    dataType: "html",
                    data: { eventId: eventId, startDate: startDate },
                    success: function (data) {
                        $("#agenda-item-modal").html(data);
                        $('.chosen-select').chosen({ width: "100%" });
                        $('.selectpicker').selectpicker();
                        $('#colorselector').colorselector();
                        $('#AgendaItem_StartTime').timepicker();
                        $('#AgendaItem_EndTime').timepicker();
                        $("#EditAgendaItemForm").validate();
                        $("#AgendaItemModal").modal('show');
                    }
                });
            });

            $(document).on('click', '.delete-agenda-item', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                
                var message = "This agenda item will be deleted permanently"

                swal({
                    title: "Are you sure?",
                    text: message,
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((willDelete) => {
                        if (willDelete) {
                            $.ajax({
                                url: "/Event/DeleteAgendaItem",
                                type: "POST",
                                dataType: "json",
                                data: { agendaItemId: id },
                                success: function (data) {
                                    //swal("The agenda item has been deleted.", {
                                    //    icon: "success",
                                    //});
                                    $("#calendar").fullCalendar('refetchEvents');
                                }
                            });
                            
                        }
                    });

                
            });

            sTable = $('#agenda').DataTable({
                pageLength: 25,
                processing: true,
                serverSide: true,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'Schedule' },
                    { extend: 'pdf', title: 'Schedule' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],
                ajax: {
                    "type": "POST",
                    "url": '/Event/GetAgendaItemsByEvent',
                    "data": {"eventId": @Model.Event.Id}
                },
                columns: [
                    {
                        data: "id",
                        name: "id",
                        sortable: false,
                        searchable: false,
                        visible: false
                    },
                    {
                        data: "scheduledDate",
                        name: "scheduledDate",
                        sortable: true,
                        searchable: true,
                        visible: true
                    },
                    {
                        data: "scheduledTime",
                        name: "scheduledTime",
                        sortable: true,
                        searchable: true,
                        visible: true
                    },
                    {
                        data: "title",
                        name: "title",
                        sortable: true,
                        searchable: true,
                        visible: true
                    },
                    {
                        data: "description",
                        name: "description",
                        sortable: true,
                        searchable: true,
                        visible: true
                    },
                    {
                        data: "locationName",
                        name: "locationName",
                        sortable: true,
                        searchable: true,
                        visible: true
                    },
                    {
                        data: "id",
                        name: "actions",
                        sortable: false,
                        searchable: false,
                        className: "text-center",
                        width: 50,
                        visible: true,
                        render: function (data, type, full, meta) {
                            var cellHtml = '';
                            cellHtml += '<a href="/event/agendaitems/editagendaitem/' + data + '" class="mb-sm btn btn-primary"><i class="fa fa-edit"></i></a>';
                            return cellHtml;
                        }
                    },
                    {
                        data: "id",
                        name: "actions",
                        sortable: false,
                        searchable: false,
                        className: "text-center",
                        width: 50,
                        visible: true,
                        render: function (data, type, full, meta) {
                            var cellHtml = '';
                            cellHtml += '<a href="#" id="delete-item-' + data + '" class="mb-sm btn btn-danger delete-item"><i class="fa fa-remove"></i></a>';
                            return cellHtml;
                        }
                    },
                ]
            });


        });

        function SaveAgendaItem(data) {
            $("#calendar").fullCalendar('refetchEvents');
            //$("#calendar").fullCalendar('option','minTime','04:00');
            $.ajax({
                url: "/event/GetAgendaItemMinTime",
                type: "GET",
                dataType: "json",
                data: { eventId: @Model.Event.Id },
                success: function (data) {
                    $("#calendar").fullCalendar('option', 'minTime', data.minTime);
                }
            });
            $("#AgendaItemModal").modal('hide');
        }
    </script>
}